# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        added = ListNode(val = (l1.val + l2.val) % 10) #we want to get the first added val
        carryOver = (l1.val + l2.val) // 10 #floor because if the result over 10 == 1 else 0
        curr = added

        while(l1.next or l2.next):
            if(l1.next and l2.next == None):
                l1 = l1.next
                curr.next = ListNode(val = (carryOver + l1.val) % 10)
                carryOver = (carryOver + l1.val) // 10
                curr = curr.next
            elif(l2.next and l1.next == None):
                l2 = l2.next
                curr.next = ListNode(val = (carryOver + l2.val) % 10)
                carryOver = (carryOver + l2.val) // 10
                curr = curr.next
            else:
                l1 = l1.next
                l2 = l2.next

                curr.next = ListNode(val = (carryOver + l1.val + l2.val) % 10)
                carryOver = (carryOver + l1.val + l2.val) // 10
                curr = curr.next
 
        if carryOver > 0:
            curr.next = ListNode(1)
        return(added)
            
#  while(l1.next and l2.next):
#             l1 = l1.next
#             l2 = l2.next

#             curr.next = ListNode(val = (carryOver + l1.val + l2.val) % 10)
#             carryOver = (carryOver + l1.val + l2.val) // 10
#             curr = curr.next
#         while(l1.next):
#             l1 = l1.next
#             curr.next = ListNode(val = (carryOver + l1.val) % 10)
#             carryOver = (carryOver + l1.val) // 10
#             curr = curr.next
#         while(l2.next):
#             l2 = l2.next
#             curr.next = ListNode(val = (carryOver + l2.val) % 10)
#             carryOver = (carryOver + l2.val) // 10
#             curr = curr.next
#         if carryOver > 0:
#             curr.next = ListNode(1)
#         return(added)
            
