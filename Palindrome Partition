class Solution:
    def partition(self, s):
        def is_palindrome(sub):
            return sub == sub[::-1]

        def dfs(start):
            if start in memo:
                return memo[start]
            
            partitions = []
            if start == len(s):
                return [[]]
            
            for end in range(start + 1, len(s) + 1):
                if is_palindrome(s[start:end]):
                    for sub_partition in dfs(end):
                        partitions.append([s[start:end]] + sub_partition)
            
            memo[start] = partitions
            return partitions
        
        memo = {}
        return dfs(0)
